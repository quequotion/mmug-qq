pkgbase=glibc-git-multilib
#pkgname=({lib32-,}glibc-git)
pkgname=lib32-glibc-git
_pkgname=glibc
pkgver=2.21.617.gd87630e
pkgrel=1
pkgdesc="GNU C Library"
arch=('x86_64')
url="http://www.gnu.org/software/libc"
license=('GPL' 'LGPL')
groups=('base')
depends=('linux-api-headers>=3.7' 'tzdata' 'filesystem>=2013.01')
makedepends=('gcc' 'git')
#backup=(etc/gai.conf
#        etc/locale.gen
#        etc/nscd.conf)
options=('!strip')
#install=glibc.install
source=(git://sourceware.org/git/glibc.git
        nscd.service
        nscd.tmpfiles
        locale.gen.txt
        locale-gen
        lib32-glibc.conf
        dtv-surplus.patch)
md5sums=('SKIP'
         'c1e07c0bec0fe89791bfd9d13fc85edf'
         'bccbe5619e75cf1d97312ec3681c605c'
         '07ac979b6ab5eeb778d55f041529d623'
         '476e9113489f93b348b21e144b6a8fcf'
         '63709cb3900cc217294415769a35904c'
         '7496f60f1cc97127a95d8970705d8255')

pkgver() {
  cd "${srcdir}/${_pkgname}"
  git describe --always | sed 's|-|.|g' | sed 's|glibc.||g'
}

build() {
  cd "${srcdir}"

  #Build native libraries
  #[[ -d build-x86_64 ]] || mkdir build-x86_64
  #pushd build-x86_64

  #echo "slibdir=/usr/lib" > configparms
  #echo "sbindir=/usr/bin" >> configparms
  #echo "rootsbindir=/usr/bin" >> configparms

  #CFLAGS=${CFLAGS/-fstack-protector-strong -fstack-protector-all/}
  #CPPFLAGS=${CPPFLAGS/-D_FORTIFY_SOURCE=2/}

  #"${srcdir}/${_pkgname}/configure" --prefix=/usr --lib{,exec}dir=/usr/lib \
  #  --with-{headers=/usr/include,bugurl=https://bugs.archlinux.org/} \
  #  --disable-profile \
  #  --enable-{obsolete-rpc,bind-now,stackguard-randomization,lock-elision} \
  #  --enable-{add-ons=libidn,kernel=3.18.0,multi-arch,lto}

  #echo "build-programs=no" >> configparms
  #make

  # re-enable hardening for programs
  #sed -i "/build-programs=/s#no#yes#" configparms
  #echo "CC += -fstack-protector-strong -fstack-protector-all -D_FORTIFY_SOURCE=2" >> configparms
  #echo "CXX += -fstack-protector-strong -fstack-protector-all -D_FORTIFY_SOURCE=2" >> configparms
  #CFLAGS=${CFLAGS/-fno-stack-protector/}
  #make

  # remove harding in preparation to run test-suite
  #sed -i '4,6d' configparms
  #CC=${CC/-fstack-protector-strong -fstack-protector-all -D_FORTIFY_SOURCE=2/}
  #CXX=${CXX/-fstack-protector-strong -fstack-protector-all -D_FORTIFY_SOURCE=2/}
  #popd

  # Hack to work around dynamic loading limit for PCSX2 profiling
  cd "${srcdir}/${_pkgname}"
  patch -Np2 < $srcdir/dtv-surplus.patch

  # Fix the source tree?
  #make clean

  #Build 32bit libraries
  [[ -d build-i686 ]] || mkdir build-i686
  pushd build-i686

  #if [[ ${CARCH} = "i686" ]]; then
  # Hack to fix NPTL issues with Xen, only required on 32bit platforms
  # TODO: make separate glibc-xen package for i686
    export CFLAGS+=" -mno-tls-direct-seg-refs"
  #fi

  echo "slibdir=/usr/lib32" > configparms
  echo "sbindir=/usr/bin" >> configparms
  echo "rootsbindir=/usr/bin" >> configparms

  export CC="gcc -m32"
  export CXX="g++ -m32"
  export LDFLAGS+=" -m32"

  CFLAGS=${CFLAGS/-fstack-protector-strong/-fno-stack-protector}
  CPPFLAGS=${CPPFLAGS/-D_FORTIFY_SOURCE=2/}

  "${srcdir}/${_pkgname}/configure" --prefix=/usr --lib{,exec}dir=/usr/lib32 \
    --with-{headers=/usr/include,bugurl=https://bugs.archlinux.org/} \
    --disable-profile \
    --enable-{obsolete-rpc,bind-now,stackguard-randomization,lock-elision} \
    --enable-{add-ons=libidn,kernel=3.18.0,multi-arch,lto} \
    --build=i686-pc-linux-gnu

  # build libraries with hardening disabled
  echo "build-programs=no" >> configparms
  make

  # re-enable hardening for programs
  sed -i "/build-programs=/s#no#yes#" configparms
  echo "CC += -fstack-protector-strong -D_FORTIFY_SOURCE=2" >> configparms
  echo "CXX += -fstack-protector-strong -D_FORTIFY_SOURCE=2" >> configparms
  CFLAGS=${CFLAGS/-fno-stack-protector/}
  make

  # remove harding in preparation to run test-suite
  sed -i '4,6d' configparms
  CC=${CC/-fstack-protector-strong -D_FORTIFY_SOURCE=2/}
  CXX=${CXX/-fstack-protector-strong -D_FORTIFY_SOURCE=2/}
  popd

}

check() {
  # bug to file - the linker commands need to be reordered
  LDFLAGS=${LDFLAGS/--as-needed,/}

  #CC=${CC/-m32/}
  #CXX=${CXX/-m32/}
  #LDFLAGS=${LDFLAGS/-m32/}

  #echo "Check native build"
  #cd ${srcdir}/build-x86_64
  #make check

  export CC="gcc -m32"
  export CXX="g++ -m32"
  export LDFLAGS+=" -m32"

  echo "Check i686 build"
  cd ${srcdir}/build-i686
  make check
}

#package_glibc-git() {
#  optdepends+=('gd')
#  provides=(glibc{,-git}=${pkgver})
#  conflicts=('glibc')
#  cd ${srcdir}/build-x86_64

#  install -dm755 ${pkgdir}/etc
#  touch ${pkgdir}/etc/ld.so.conf


#  CC=${CC/-m32/}
#  CXX=${CXX/-m32/}
#  LDFLAGS=${LDFLAGS/-m32/}

#  make install_root=${pkgdir} install

#  rm -f ${pkgdir}/etc/ld.so.{cache,conf}

#  install -dm755 ${pkgdir}/usr/lib/{locale,systemd/system,tmpfiles.d}

#  install -m644 ${srcdir}/${_pkgname}/nscd/nscd.conf ${pkgdir}/etc/nscd.conf
#  install -m644 ${srcdir}/nscd.service ${pkgdir}/usr/lib/systemd/system
#  install -m644 ${srcdir}/nscd.tmpfiles ${pkgdir}/usr/lib/tmpfiles.d/nscd.conf

#  install -m644 ${srcdir}/${_pkgname}/posix/gai.conf ${pkgdir}/etc/gai.conf

#  install -m755 ${srcdir}/locale-gen ${pkgdir}/usr/bin

  # temporary symlink
#  ln -s ../../sbin/ldconfig ${pkgdir}/usr/bin/ldconfig

  # create /etc/locale.gen
#  install -m644 ${srcdir}/locale.gen.txt ${pkgdir}/etc/locale.gen
#  sed -e '1,3d' -e 's|/| |g' -e 's|\\| |g' -e 's|^|#|g' \
#    ${srcdir}/glibc/localedata/SUPPORTED >> ${pkgdir}/etc/locale.gen

  # Do not strip the following files for improved debugging support
  # ("improved" as in not breaking gdb and valgrind...):
  #   ld-${pkgver}.so
  #   libc-${pkgver}.so
  #   libpthread-${pkgver}.so
  #   libthread_db-1.0.so

#  cd $pkgdir
#  strip $STRIP_BINARIES sbin/{ldconfig,sln} \
#    usr/bin/{gencat,getconf,getent,iconv,locale,localedef} \
#    usr/bin/{makedb,pcprofiledump,pldd,rpcgen,sprof} \
#    usr/lib/getconf/* \
#    usr/sbin/{iconvconfig,nscd}
#  [[ $CARCH = "i686" ]] && strip $STRIP_BINARIES usr/bin/lddlibc4

#  strip $STRIP_STATIC usr/lib/*.a

#  strip $STRIP_SHARED usr/lib/{libanl,libBrokenLocale,libcidn,libcrypt}-*.so \
#    usr/lib/libnss_{compat,db,dns,files,hesiod,nis,nisplus}-*.so \
#    usr/lib/{libdl,libm,libnsl,libresolv,librt,libutil}-*.so \
#    usr/lib/{libmemusage,libpcprofile,libSegFault}.so \
#    usr/lib/{audit,gconv}/*.so
#}

#package_lib32-glibc-git() {
package() {
  optdepends+=('lib32-gd')
  pkgdesc+=" (32-bit + DTVx2)"
  provides=(lib32-glibc{,-git}=${pkgver})
  conflicts=('lib32-glibc')
  cd ${srcdir}/build-i686

  export CC="gcc -m32"
  export CXX="g++ -m32"
  export LDFLAGS+=" -m32"

  make install_root=${pkgdir} install

  rm -rf ${pkgdir}/{etc,sbin,usr/{bin,sbin,share},var}

  # We need one 32 bit specific header file
  find ${pkgdir}/usr/include -type f -not -name stubs-32.h -delete

  # Dynamic linker
  mkdir ${pkgdir}/usr/lib
  ln -s ../lib32/ld-linux.so.2 ${pkgdir}/usr/lib/

  # Add lib32 paths to the default library search path
  install -Dm644 "$srcdir/lib32-glibc.conf" "$pkgdir/etc/ld.so.conf.d/lib32-glibc.conf"

  # Symlink /usr/lib32/locale to /usr/lib/locale
  ln -s ../lib/locale "$pkgdir/usr/lib32/locale"

  # remove the static libraries that have a shared counterpart
  # libc, libdl, libm and libpthread are required for toolchain testsuites
  # in addition libcrypt appears widely required
  rm $pkgdir/usr/lib32/lib{anl,BrokenLocale,nsl,resolv,rt,util}.a

  # Do not strip the following files for improved debugging support
  # ("improved" as in not breaking gdb and valgrind...):
  #   ld-${pkgver}.so
  #   libc-${pkgver}.so
  #   libpthread-${pkgver}.so
  #   libthread_db-1.0.so

  cd $pkgdir
  strip $STRIP_BINARIES \
                        \
                        \
                        usr/lib32/getconf/*

  strip $STRIP_STATIC usr/lib32/*.a

  strip $STRIP_SHARED usr/lib32/{libanl,libBrokenLocale,libcidn,libcrypt}-*.so \
                      usr/lib32/libnss_{compat,db,dns,files,hesiod,nis,nisplus}-*.so \
                      usr/lib32/{libdl,libm,libnsl,libresolv,librt,libutil}-*.so \
                      usr/lib32/{libmemusage,libpcprofile,libSegFault}.so \
                      usr/lib32/{audit,gconv}/*.so
}

