--- gtkdialog-don-t-use-csd-when-use-header-bar-is-FALSE.patch	2014-08-13 15:16:26.018154213 +0900
+++ gtkdialog-don-t-use-csd-when-use-header-bar-is-FALSE.patch	2014-08-11 01:08:42.748776423 +0900
@@ -1,174 +0,0 @@
-From a56059fbba75919edf7499f35ead842a7edd17c9 Mon Sep 17 00:00:00 2001
-From: Lars Uebernickel <lars.uebernickel@canonical.com>
-Date: Wed, 14 May 2014 13:16:43 +0200
-Subject: [PATCH 1/2] gtkdialog: don't use csd when use-header-bar is FALSE
-
-https://bugzilla.gnome.org/show_bug.cgi?id=730893
----
- gtk/gtkdialog.c                 | 65 ++++++++++++++++++++---------------------
- testsuite/a11y/colorchooser.txt |  3 +-
- testsuite/gtk/builder.c         |  7 ++++-
- 3 files changed, 38 insertions(+), 37 deletions(-)
-
-diff --git a/gtk/gtkdialog.c b/gtk/gtkdialog.c
-index eb342a5..c56c8f4 100644
---- a/gtk/gtkdialog.c
-+++ b/gtk/gtkdialog.c
-@@ -214,6 +214,10 @@ static void      gtk_dialog_buildable_custom_finished    (GtkBuildable  *buildab
-                                                           GObject       *child,
-                                                           const gchar   *tagname,
-                                                           gpointer       user_data);
-+static void     gtk_dialog_buildable_add_child           (GtkBuildable  *buildable,
-+                                                          GtkBuilder    *builder,
-+                                                          GObject       *child,
-+                                                          const gchar   *type);
- 
- 
- enum {
-@@ -273,47 +277,17 @@ add_cb (GtkContainer *container,
- }
- 
- static void
--update_title (GObject    *dialog,
--              GParamSpec *pspec,
--              GtkWidget  *label)
--{
--  const gchar *title;
--
--  title = gtk_window_get_title (GTK_WINDOW (dialog));
--  gtk_label_set_label (GTK_LABEL (label), title);
--  gtk_widget_set_visible (label, title && title[0]);
--}
--
--static void
- apply_use_header_bar (GtkDialog *dialog)
- {
-   GtkDialogPrivate *priv = dialog->priv;
- 
-   gtk_widget_set_visible (priv->action_area, !priv->use_header_bar);
-   gtk_widget_set_visible (priv->headerbar, priv->use_header_bar);
--  if (!priv->use_header_bar)
-+  if (priv->use_header_bar)
-     {
--      GtkWidget *box = NULL;
--
--      if (gtk_window_get_type_hint (GTK_WINDOW (dialog)) == GDK_WINDOW_TYPE_HINT_DIALOG)
--        {
--          GtkWidget *label;
--
--          box = gtk_box_new (GTK_ORIENTATION_HORIZONTAL, 0);
--          gtk_widget_show (box);
--          gtk_widget_set_size_request (box, -1, 16);
--          label = gtk_label_new ("");
--          gtk_widget_set_margin_top (label, 6);
--          gtk_widget_set_margin_bottom (label, 6);
--          gtk_style_context_add_class (gtk_widget_get_style_context (label), "title");
--          gtk_box_set_center_widget (GTK_BOX (box), label);
--          g_signal_connect_object (dialog, "notify::title", G_CALLBACK (update_title), label, 0);
--        }
--
--      gtk_window_set_titlebar (GTK_WINDOW (dialog), box);
-+      gtk_window_set_titlebar (GTK_WINDOW (dialog), priv->headerbar);
-+      g_signal_connect (priv->action_area, "add", G_CALLBACK (add_cb), dialog);
-     }
--  if (priv->use_header_bar)
--    g_signal_connect (priv->action_area, "add", G_CALLBACK (add_cb), dialog);
- }
- 
- static void
-@@ -490,8 +464,8 @@ gtk_dialog_constructor (GType                  type,
-   if (priv->use_header_bar == -1)
-     priv->use_header_bar = FALSE;
- 
--  add_action_widgets (dialog);
-   apply_use_header_bar (dialog);
-+  add_action_widgets (dialog);
- 
-   return object;
- }
-@@ -719,6 +693,7 @@ gtk_dialog_buildable_interface_init (GtkBuildableIface *iface)
-   parent_buildable_iface = g_type_interface_peek_parent (iface);
-   iface->custom_tag_start = gtk_dialog_buildable_custom_tag_start;
-   iface->custom_finished = gtk_dialog_buildable_custom_finished;
-+  iface->add_child = gtk_dialog_buildable_add_child;
- }
- 
- static gboolean
-@@ -1830,6 +1805,28 @@ gtk_dialog_buildable_custom_finished (GtkBuildable *buildable,
-   g_slice_free (ActionWidgetsSubParserData, parser_data);
- }
- 
-+static void
-+gtk_dialog_buildable_add_child (GtkBuildable  *buildable,
-+                                GtkBuilder    *builder,
-+                                GObject       *child,
-+                                const gchar   *type)
-+{
-+  GtkDialog *dialog = GTK_DIALOG (buildable);
-+  GtkDialogPrivate *priv = dialog->priv;
-+
-+  if (type == NULL)
-+    gtk_container_add (GTK_CONTAINER (buildable), GTK_WIDGET (child));
-+
-+  /* Don't call gtk_window_set_titlebar() until we know whether we want
-+   * traditional titlebars or header bars.
-+   */
-+  else if (g_str_equal (type, "titlebar"))
-+    priv->headerbar = GTK_WIDGET (child);
-+
-+  else
-+    GTK_BUILDER_WARN_INVALID_CHILD_TYPE (buildable, type);
-+}
-+
- /**
-  * gtk_dialog_get_action_area:
-  * @dialog: a #GtkDialog
-diff --git a/testsuite/a11y/colorchooser.txt b/testsuite/a11y/colorchooser.txt
-index 6525bfe..59ae57a 100644
---- a/testsuite/a11y/colorchooser.txt
-+++ b/testsuite/a11y/colorchooser.txt
-@@ -1,7 +1,6 @@
- window1
-   "dialog"
-   index: 0
--  name: Select a Color
-   state: enabled sensitive showing visible
-   toolkit: gtk
-   <AtkComponent>
-@@ -38,7 +37,7 @@ window1
-       parent: headerbar
-       index: 1
-       name: Select
--      state: enabled focusable sensitive showing visible default
-+      state: enabled focusable sensitive showing visible
-       toolkit: gtk
-       <AtkComponent>
-       layer: widget
-diff --git a/testsuite/gtk/builder.c b/testsuite/gtk/builder.c
-index 43a0441..d8cb221 100644
---- a/testsuite/gtk/builder.c
-+++ b/testsuite/gtk/builder.c
-@@ -1008,6 +1008,11 @@ test_children (void)
- 
-   GObject *window, *button;
-   GObject *dialog, *vbox, *action_area;
-+  gboolean dialogs_use_header;
-+
-+  g_object_get (gtk_settings_get_default (),
-+                "gtk-dialogs-use-header", &dialogs_use_header,
-+                NULL);
-   
-   builder = builder_new_from_string (buffer1, -1, NULL);
-   window = gtk_builder_get_object (builder, "window1");
-@@ -1028,7 +1033,7 @@ test_children (void)
-   g_assert (dialog != NULL);
-   g_assert (GTK_IS_DIALOG (dialog));
-   children = gtk_container_get_children (GTK_CONTAINER (dialog));
--  g_assert (g_list_length (children) == 2);
-+  g_assert (g_list_length (children) == dialogs_use_header ? 2 : 1);
-   g_list_free (children);
-   
-   vbox = gtk_builder_get_object (builder, "dialog1-vbox");
--- 
-2.0.0
-
